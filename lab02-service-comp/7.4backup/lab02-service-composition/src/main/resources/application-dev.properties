logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=lab02-service-composition

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0
# lets use a different management port in case you need to listen to HTTP requests on 8080
server.port=8090
management.port=8190

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

cxf.path=/services

camel.component.servlet.mapping.contextPath=/camel/*

camelrest.host=localhost
camelrest.port=8090
camelrest.contextPath=/camel


#Database configuration
spring.datasource.url = jdbc:h2:mem:mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username = sa
spring.datasource.password = 
spring.datasource.driver-class-name = org.h2.Driver
spring.datasource.platform = h2

#Url of the backend rest webservice
backend.url=http4:localhost:8091?bridgeEndpoint=true


#logging
#loggingEndpoint=http4://localhost:9200/fuse/event?bridgeEndpoint=true #use this for local elk stack
loggingEndpoint=log:event?level=info&multiline=true&skipBodyLineSeparator=false&showHeaders=true&showProperties=true
#loggingEndpoint=https4://logging-es.logging.svc:9200/fuse/event?bridgeEndpoint=true&sslContextParameters=sslContextParameters

